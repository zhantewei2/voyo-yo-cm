import Vue, { VNode } from "vue";
import { Subscription } from "rxjs";
export default class extends Vue {
    autoClose: boolean;
    bgClose: boolean;
    show: boolean;
    title: string;
    loneliness: boolean;
    size: "now" | "large" | "small";
    contentCenter: boolean;
    showUpdate(e: boolean): void;
    watchShow(v: boolean): void;
    transition: {
        enterClass: string;
        enterActiveClass: string;
        leaveToClass: string;
        leaveActiveClass: string;
    };
    transitionBg: {
        enterClass: string;
        enterActiveClass: string;
        leaveToClass: string;
        leaveActiveClass: string;
    };
    modalName: string;
    index: number;
    visible: boolean;
    visiblePre: "close" | "show" | "hold";
    closeSvg: string;
    backSvg: string;
    cardActive: boolean;
    isMobile: boolean;
    watchOrder: Subscription;
    changeBodyOver: boolean;
    changeRouterOrder: Subscription;
    timeoutAnimate: any;
    headerEl: HTMLElement;
    cardEl: HTMLElement;
    created(): void;
    mounted(): void;
    headerCreated(vNode: VNode): void;
    cardEnter(): void;
    cardLeave(): void;
    bgClick(e: any): void;
    cardClick(e: any): void;
    closeBtn(): void;
    clearAn(): void;
    toActive(): void;
    open(): void;
    deactivated(): void;
    checkBodyHid(): void;
    closeByControl(): void;
    closeByHistory(): void;
    close(): void;
    beforeDestroy(this: any): void;
    pushHistory(): void;
    popHistory(): void;
}
